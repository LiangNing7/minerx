{
  "swagger": "2.0",
  "info": {
    "title": "usercenter/v1/usercenter.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "UserCenter"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/auth/auth": {
      "post": {
        "summary": "Auth",
        "operationId": "UserCenter_Auth",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/auth/authenticate": {
      "post": {
        "summary": "Authenticate",
        "operationId": "UserCenter_Authenticate",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthenticateResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthenticateRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/auth/authorize": {
      "post": {
        "summary": "Authorize",
        "operationId": "UserCenter_Authorize",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1AuthorizeResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1AuthorizeRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/auth/login": {
      "post": {
        "summary": "Login",
        "operationId": "UserCenter_Login",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LoginRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/auth/logout": {
      "post": {
        "summary": "Logout",
        "operationId": "UserCenter_Logout",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LogoutResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1LogoutRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/auth/refresh-token": {
      "post": {
        "summary": "RefreshToken",
        "operationId": "UserCenter_RefreshToken",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1LoginReply"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1RefreshTokenRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/secrets": {
      "get": {
        "summary": "ListSecret",
        "operationId": "UserCenter_ListSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Offset is the starting point of the list for pagination.\n@gotags: form:\"offset\"",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Limit is the maximum number of secrets to return.\n@gotags: form:\"limit\"\n\nTODO: Add additional query fields if needed.",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserCenter"
        ]
      },
      "post": {
        "summary": "CreateSecret",
        "operationId": "UserCenter_CreateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateSecretRequest represents the request message for creating a new secret.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateSecretRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/secrets/{name}": {
      "get": {
        "summary": "GetSecret",
        "operationId": "UserCenter_GetSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "SecretID is the unique identifier of the secret to retrieve.\n@gotags: uri:\"name\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserCenter"
        ]
      },
      "delete": {
        "summary": "DeleteSecret",
        "operationId": "UserCenter_DeleteSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "@gotags: uri:\"name\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserCenter"
        ]
      },
      "put": {
        "summary": "UpdateSecret",
        "operationId": "UserCenter_UpdateSecret",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateSecretResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "name",
            "description": "@gotags: uri:\"name\"",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCenterUpdateSecretBody"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/users": {
      "get": {
        "summary": "ListUser",
        "operationId": "UserCenter_ListUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1ListUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "offset",
            "description": "Offset is the starting point of the list for pagination.\n@gotags: form:\"offset\"",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          },
          {
            "name": "limit",
            "description": "Limit is the maximum number of users to return.\n@gotags: form:\"limit\"",
            "in": "query",
            "required": false,
            "type": "string",
            "format": "int64"
          }
        ],
        "tags": [
          "UserCenter"
        ]
      },
      "post": {
        "operationId": "UserCenter_CreateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1CreateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "description": "CreateUserRequest represents the request message for creating a new user.",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/v1CreateUserRequest"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/users/{userID}": {
      "get": {
        "operationId": "UserCenter_GetUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1GetUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userID",
            "description": "@gotags: uri:\"userID\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserCenter"
        ]
      },
      "delete": {
        "summary": "DeleteUser",
        "operationId": "UserCenter_DeleteUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1DeleteUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userID",
            "description": "@gotags: uri:\"userID\"",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "UserCenter"
        ]
      },
      "put": {
        "operationId": "UserCenter_UpdateUser",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdateUserResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCenterUpdateUserBody"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    },
    "/v1/users/{userID}/update-password": {
      "put": {
        "summary": "UpdatePassword",
        "operationId": "UserCenter_UpdatePassword",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/v1UpdatePasswordResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "schema": {
              "$ref": "#/definitions/UserCenterUpdatePasswordBody"
            }
          }
        ],
        "tags": [
          "UserCenter"
        ]
      }
    }
  },
  "definitions": {
    "UserCenterUpdatePasswordBody": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "oldPassword": {
          "type": "string"
        },
        "newPassword": {
          "type": "string"
        }
      }
    },
    "UserCenterUpdateSecretBody": {
      "type": "object",
      "properties": {
        "expires": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        }
      },
      "description": "UpdateSecretRequest represents the request message for updating an existing secret."
    },
    "UserCenterUpdateUserBody": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string",
          "title": "一年只能修改一次"
        },
        "nickname": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "description": "UpdateUserRequest represents the request message for updating an existing user."
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    },
    "v1AuthRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        },
        "obj": {
          "type": "string"
        },
        "act": {
          "type": "string"
        }
      }
    },
    "v1AuthResponse": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        },
        "allowed": {
          "type": "boolean"
        }
      }
    },
    "v1AuthenticateRequest": {
      "type": "object",
      "properties": {
        "token": {
          "type": "string"
        }
      }
    },
    "v1AuthenticateResponse": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        }
      }
    },
    "v1AuthorizeRequest": {
      "type": "object",
      "properties": {
        "sub": {
          "type": "string"
        },
        "obj": {
          "type": "string"
        },
        "act": {
          "type": "string"
        }
      }
    },
    "v1AuthorizeResponse": {
      "type": "object",
      "properties": {
        "allowed": {
          "type": "boolean"
        }
      }
    },
    "v1CreateSecretRequest": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "expires": {
          "type": "string",
          "format": "int64"
        },
        "description": {
          "type": "string"
        }
      },
      "description": "CreateSecretRequest represents the request message for creating a new secret."
    },
    "v1CreateSecretResponse": {
      "type": "object",
      "properties": {
        "secretID": {
          "type": "string",
          "description": "SecretID is the unique identifier of the newly created secret.\n\nTODO: Add additional fields to return if needed."
        }
      },
      "description": "CreateSecretResponse represents the response message for a successful secret creation."
    },
    "v1CreateUserRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        }
      },
      "description": "CreateUserRequest represents the request message for creating a new user."
    },
    "v1CreateUserResponse": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string",
          "description": "UserID is the unique identifier of the newly created user."
        }
      },
      "description": "CreateUserResponse represents the response message for a successful user creation."
    },
    "v1DeleteSecretResponse": {
      "type": "object",
      "description": "DeleteSecretResponse represents the response message for a successful secret deletion.\n\nTODO: Add additional fields to return if needed."
    },
    "v1DeleteUserResponse": {
      "type": "object",
      "description": "DeleteUserResponse represents the response message for a successful user deletion."
    },
    "v1GetSecretResponse": {
      "type": "object",
      "properties": {
        "secret": {
          "$ref": "#/definitions/v1Secret",
          "description": "Secret is the retrieved secret object."
        }
      },
      "description": "GetSecretResponse represents the response message for a successful retrieval of a secret."
    },
    "v1GetUserResponse": {
      "type": "object",
      "properties": {
        "user": {
          "$ref": "#/definitions/v1User",
          "description": "User is the retrieved user object."
        }
      },
      "description": "GetUserResponse represents the response message for a successful retrieval of a user."
    },
    "v1ListSecretResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "description": "TotalCount is the total number of secrets matching the query."
        },
        "secrets": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1Secret"
          },
          "description": "Secret is the list of secrets in the current page."
        }
      },
      "description": "ListSecretResponse represents the response message for listing secrets."
    },
    "v1ListUserResponse": {
      "type": "object",
      "properties": {
        "total": {
          "type": "string",
          "format": "int64",
          "description": "TotalCount is the total number of users matching the query."
        },
        "users": {
          "type": "array",
          "items": {
            "type": "object",
            "$ref": "#/definitions/v1User"
          },
          "description": "User is the list of users in the current page."
        }
      },
      "description": "ListUserResponse represents the response message for listing users."
    },
    "v1LoginReply": {
      "type": "object",
      "properties": {
        "refresh_token": {
          "type": "string"
        },
        "access_token": {
          "type": "string"
        },
        "type": {
          "type": "string"
        },
        "expiresAt": {
          "type": "string",
          "format": "int64"
        }
      }
    },
    "v1LoginRequest": {
      "type": "object",
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "v1LogoutRequest": {
      "type": "object"
    },
    "v1LogoutResponse": {
      "type": "object"
    },
    "v1RefreshTokenRequest": {
      "type": "object"
    },
    "v1Secret": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "secretID": {
          "type": "string"
        },
        "secretKey": {
          "type": "string"
        },
        "expires": {
          "type": "string",
          "format": "int64"
        },
        "status": {
          "type": "integer",
          "format": "int32"
        },
        "description": {
          "type": "string"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "Secret represents a secret with its metadata."
    },
    "v1UpdatePasswordResponse": {
      "type": "object"
    },
    "v1UpdateSecretResponse": {
      "type": "object",
      "description": "UpdateSecretResponse represents the response message for a successful secret update."
    },
    "v1UpdateUserResponse": {
      "type": "object",
      "description": "UpdateUserResponse represents the response message for a successful user update."
    },
    "v1User": {
      "type": "object",
      "properties": {
        "userID": {
          "type": "string"
        },
        "username": {
          "type": "string"
        },
        "nickname": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "secrets": {
          "type": "string",
          "format": "int64"
        },
        "createdAt": {
          "type": "string",
          "format": "date-time"
        },
        "updatedAt": {
          "type": "string",
          "format": "date-time"
        }
      },
      "description": "User represents a user with its metadata."
    }
  }
}
